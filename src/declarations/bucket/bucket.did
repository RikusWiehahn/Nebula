type BasicResponse = record {
    "ok": opt text;
    "err": text;
};

type SubCanisterTelemetry = record {
    "id": text;
    "model_name": text;
    "memory_size": float64;
    "memory_used": float64;
    "cycles": float64;
};

type SubCanisterTelemetryResponse = record {
    "ok": opt SubCanisterTelemetry;
    "err": text;
};

type ModelDataFieldType = record {
    "field_name": text;
    "data_type": text;
    "default_json_value": text;
};

/* 
    Data Types:
    "STRING"
    "NUMBER"
    "BOOLEAN"
    "STRING_ARRAY"
    "NUMBER_ARRAY"
*/

type RecordDataField = record {
    "field_name": text;
    "data_type": text;
    "json_value": text;
};

type Record = record {
    "id": text;
    "model_name": text;
    "data_fields": vec RecordDataField;
};

type RecordResponse = record {
    "ok": opt Record;
    "err": text;
};

type RecordListResponse = record {
    "ok": vec Record;
    "err": text;
    "page": float64;
    "page_size": float64;
};

service : {
    // Auth & setup
    "set_admin_canister": (record { "canister_id": principal }) -> (BasicResponse);
    "check_if_admin_canister": () -> (BasicResponse);
    "init_model": (record { "model_name": text }) -> (BasicResponse);
    "get_telemetry": () -> (SubCanisterTelemetryResponse);

    // Manage model fields
    "add_field": (ModelDataFieldType) -> (BasicResponse);
    "remove_field": (record { "field_name": text }) -> (BasicResponse);

    // Create/Read/Update/Delete records
    "insert_record": (Record) -> (RecordResponse);
    "update_record": (Record) -> (RecordResponse);
    "get_record": (record { "id": text }) -> (RecordResponse);
    "delete_record": (record { "id": text }) -> (BasicResponse);
    "get_record_list": (record { "page": float64; "page_size": float64; }) -> (RecordListResponse);

    // wallet
    "wallet_receive": (nat) -> ();
}
